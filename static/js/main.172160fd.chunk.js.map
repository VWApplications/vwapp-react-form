{"version":3,"sources":["../../dist/user~bWEoNccF.png","../../src/utils.js","../../src/fields/InputField.js","../../src/fields/CheckField.js","../../src/fields/TextAreaField.js","../../src/fields/SelectField.js","../../src/fields/RangeField.js","../../src/styles.js","../../src/assets/user.png","../../src/fields/ImageField.js","../../src/fields/FileField.js","../../src/fields/InputGroup.js","../../src/fields/DateTimeField.js","../../src/fields/ColorField.js","../../src/fields/DataListField.js","../../src/components.js","App.js","index.js"],"names":["module","exports","toString","list","join","string","index","InputField","field","error","touched","classList","labelClassList","className","Form","custom","as","type","placeholder","disabled","size","plaintext","readOnly","id","isInvalid","isValid","CheckField","checked","inline","label","feedback","TextAreaField","rows","SelectField","value","key","option","RangeField","min","max","ImgContainer","styled","CustomJson","CustomFieldset","props","ImageLabel","require","ImageField","componentDidMount","input","this","__handleChange","event","imageFile","localImageUrl","URL","imageObject","window","__handlePreview","document","previewImageDom","render","mimeType","previewLogoUrl","invalid","thumbnail","fluid","src","alt","name","accept","onChange","defaultProps","FileField","file","column","InputGroupField","InputGroup","DateTimePicker","maxDate","minDate","locale","ColorField","DataListField","Json","JSON","Fieldset","children","title","show","style","paddingLeft","App","__onSubmit","data","console","log","__validate","values","errors","first_name","cpf","Utilities","validate","By","CPF","select","range","width","Container","onSubmit","initialValues","multiselect","check","switch","choice","color","description","datetime","Date","date","time","browsers","handleSubmit","submitting","pristine","noValidate","Row","Group","Col","md","component","parse","normalize","To","NUMBER","format","left","Text","right","DropdownButton","variant","Dropdown","Item","onClick","Divider","options","multiple","Button","React","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.172160fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user~bWEoNccF.6102afa3.png\";","export const toString = (list = [], join = \" \") => {\n  let string = \"\";\n  list.map((item, index) => {\n    if (index === 0) {\n      string += `${item}`;\n    } else {\n      if (item) {\n        string += `${join}${item}`;\n      } else {\n        string += `${item}`;\n      }\n    }\n  });\n\n  return string;\n};\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport const InputField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = [\"flex-row\"];\n  let labelClassList = [\"pr-3\", \"mt-2\", \"align-self-start\"];\n  if (field.column) {\n    labelClassList = [\"pr-2\"];\n    classList = [\"flex-column\"];\n  }\n\n  return (\n    <div className={toString([\"d-flex\", ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          type={field.input.type ? field.input.type : \"text\"}\n          placeholder={field.placeholder}\n          disabled={(field.disabled || field.readOnly) || false}\n          className={toString([\"form-control\", field.className || \"\"])}\n          size={field.size}\n          plaintext={field.readOnly || false}\n          readOnly={field.readOnly || false}\n          id={field.input.name}\n          isInvalid={touched && error && !field.readOnly && !field.disabled}\n          isValid={touched && !error && !field.readOnly && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport const CheckField = field => {\n  const { error } = field.meta;\n\n  return (\n    <Fragment>\n      <Form.Check\n        custom\n        {...field.input}\n        checked={field.input.type === \"switch\" ? field.input.value : field.input.checked}\n        disabled={field.disabled || false}\n        id={field.id}\n        inline={field.inline || false}\n        label={field.label}\n        feedback={error}\n        isInvalid={error}\n      />\n    </Fragment>\n  );\n};\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport const TextAreaField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = [\"flex-row\"];\n  let labelClassList = [\"pr-3\", \"align-self-center\"];\n  if (field.column) {\n    labelClassList = [\"pr-2\"];\n    classList = [\"flex-column\"];\n  }\n\n  return (\n    <div className={toString([\"d-flex\", ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          as='textarea'\n          type='text'\n          placeholder={field.placeholder}\n          disabled={(field.disabled || field.readOnly) || false}\n          className={field.className}\n          size={field.size}\n          rows={field.rows}\n          plaintext={field.readOnly || false}\n          readOnly={field.readOnly || false}\n          id={field.input.name}\n          isInvalid={touched && error && !field.readOnly && !field.disabled}\n          isValid={touched && !error && !field.readOnly && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport const SelectField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = [\"flex-row\"];\n  let labelClassList = [\"pr-3\", \"align-self-center\"];\n  if (field.column) {\n    labelClassList = [\"pr-2\"];\n    classList = [\"flex-column\"];\n  }\n\n  return (\n    <div className={toString([\"d-flex\", ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='select'\n          disabled={field.disabled || false}\n          className={field.className}\n          size={field.size}\n          id={field.input.name}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}>\n          {!field.input.multiple && <option value=''>{field.placeholder ? field.placeholder : \"Selecione uma opção\"}</option>}\n          {field.options.map((option, index) => (\n            <option key={index} value={option.value}>{option.title}</option>\n          ))}\n        </Form.Control>\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport const RangeField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = [\"flex-row\"];\n  if (field.column) classList = [\"flex-column\"];\n\n  return (\n    <div className={toString([\"d-flex\", ...classList])}>\n      {field.label && <Form.Label className='pr-2'>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          type='range'\n          min={field.min || 0}\n          max={field.max || 100}\n          disabled={field.disabled || false}\n          className={field.className}\n          id={field.input.name}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\nimport { Form } from \"react-bootstrap\";\n\nexport const ImgContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nexport const CustomJson = styled.pre`\n  border: 1px solid #ccc;\n  background: rgba(0, 0, 0, 0.1);\n  box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n  padding: 20px;\n  margin: 0 10px 0;\n`;\n\nexport const CustomFieldset = styled.fieldset`\n    padding: 0 20px;\n    margin: 10px 0 30px 0;\n    border: 1px solid #ccc;\n    > legend {\n        margin-bottom: 0;\n    }\n    display: ${props => props.show ? \"block\" : \"none\"};\n`;\n\nexport const ImageLabel = styled(Form.Label)`\n  width: 100%;\n  text-align: center;\n`;\n","/* loaded by smart-asset */\nexport default require(\"./user~bWEoNccF.png\")","import React, { Fragment, Component } from \"react\";\nimport { Form, Image } from \"react-bootstrap\";\nimport { ImgContainer, ImageLabel } from \"../styles\";\nimport user from \"../assets/user.png\";\n\nexport class ImageField extends Component {\n  componentDidMount() {\n    const { input } = this.props;\n\n    if (typeof input.value === \"string\" && input.value) {\n      this.__handlePreview(input.value);\n    }\n  }\n\n  static defaultProps = {\n    previewLogoUrl: user,\n    mimeType: \"image/jpeg, image/png\"\n  };\n\n  __handleChange(event, input) {\n    event.preventDefault();\n    const imageFile = event.target.files[0];\n    if (imageFile) {\n      const localImageUrl = URL.createObjectURL(imageFile);\n      const imageObject = new window.Image();\n      imageObject.onload = () => {\n        imageFile.width = imageObject.naturalWidth;\n        imageFile.height = imageObject.naturalHeight;\n        input.onChange(imageFile);\n        URL.revokeObjectURL(imageFile);\n      };\n      imageObject.src = localImageUrl;\n      this.__handlePreview(localImageUrl);\n    }\n  }\n\n  __handlePreview(imgURL) {\n    const previewImageDom = document.querySelector(\".preview-image\");\n    previewImageDom.src = imgURL;\n  }\n\n  render() {\n    const { input, className, mimeType, previewLogoUrl, placeholder, disabled, label } = this.props;\n    const { error, invalid } = this.props.meta;\n\n    return (\n      <Fragment>\n        {label && <ImageLabel>{label}</ImageLabel>}\n        <ImgContainer>\n          <Image thumbnail fluid src={previewLogoUrl} className='preview-image' alt='Visualização' />\n        </ImgContainer>\n\n        <Fragment>\n          <Form.File\n            custom\n            name={input.name}\n            type={input.type}\n            label={input.value ? input.value.name : placeholder}\n            accept={mimeType}\n            disabled={disabled || false}\n            className={className}\n            onChange={event => this.__handleChange(event, input)}\n            feedback={error}\n            isInvalid={invalid && error && !disabled}\n            isValid={invalid && !error && !disabled}\n          />\n          <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        </Fragment>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport class FileField extends Component {\n  __handleChange(event, input) {\n    event.preventDefault();\n    const file = event.target.files[0];\n    input.onChange(file);\n  }\n\n  render() {\n    const { input, className, placeholder, disabled, label, column } = this.props;\n    const { error, invalid } = this.props.meta;\n\n    let classList = [\"flex-row\"];\n    let labelClassList = [\"pr-3\", \"mt-2\", \"align-self-start\"];\n    if (column) {\n      labelClassList = [\"pr-2\"];\n      classList = [\"flex-column\"];\n    }\n\n    return (\n      <div className={toString([\"d-flex\", ...classList])}>\n        {label && <Form.Label className={toString([...labelClassList])}>{label}</Form.Label>}\n        <div className='flex-column flex-grow-1'>\n          <Form.File\n            custom\n            name={input.name}\n            type={input.type}\n            label={input.value ? input.value.name : placeholder}\n            disabled={disabled || false}\n            className={className}\n            onChange={event => this.__handleChange(event, input)}\n            feedback={error}\n            isInvalid={invalid && error && !disabled}\n            isValid={invalid && !error && !disabled}\n          />\n          <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { InputGroup, Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport const InputGroupField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = [\"flex-row\"];\n  let labelClassList = [\"pr-3\", \"mt-2\", \"align-self-start\"];\n  if (field.column) {\n    labelClassList = [\"pr-2\"];\n    classList = [\"flex-column\"];\n  }\n\n  return (\n    <div className={toString([\"d-flex\", ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <InputGroup>\n          <InputGroup.Prepend>\n            {field.left}\n          </InputGroup.Prepend>\n          <Fragment>\n            <Form.Control\n              {...field.input}\n              custom\n              as='input'\n              type='text'\n              placeholder={field.placeholder}\n              disabled={field.disabled || false}\n              className={toString([\"form-control\", field.className || \"\"])}\n              id={field.input.name}\n              isInvalid={touched && error && !field.disabled}\n              isValid={touched && !error && !field.disabled}\n            />\n          </Fragment>\n          <InputGroup.Append>\n            {field.right}\n          </InputGroup.Append>\n          <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        </InputGroup>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport DateTimePickerField from \"react-datetime-picker\";\nimport DatePicker from \"react-date-picker\";\nimport TimePicker from \"react-time-picker\";\nimport { toString } from \"../utils\";\n\nexport class DateTimePicker extends Component {\n  render() {\n    const { label, input, className, id, maxDate, minDate, disabled, column } = this.props;\n    const { error, invalid } = this.props.meta;\n\n    let classList = [\"flex-row\"];\n    if (column) classList = [\"flex-column\"];\n\n    switch (input.type) {\n      case \"time\":\n        return (\n          <div className={toString([\"d-flex\", ...classList])}>\n            {label && <Form.Label className='pr-2'>{label}</Form.Label>}\n            <div className='flex-column flex-grow-1'>\n              <TimePicker\n                name={input.name}\n                onChange={input.onChange}\n                value={input.value}\n                disabled={disabled || false}\n                locale='pt-BR'\n                className={className}\n                id={id}\n              />\n              <p className='text-danger'>{invalid && error}</p>\n            </div>\n          </div>\n        );\n      case \"date\":\n        return (\n          <div className={toString([\"d-flex\", ...classList])}>\n            {label && <Form.Label className='pr-2'>{label}</Form.Label>}\n            <div className='flex-column flex-grow-1'>\n              <DatePicker\n                name={input.name}\n                onChange={input.onChange}\n                value={input.value}\n                disabled={disabled || false}\n                locale='pt-BR'\n                className={className}\n                minDate={minDate}\n                maxDate={maxDate}\n                id={id}\n              />\n              <p className='text-danger'>{invalid && error}</p>\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <div className={toString([\"d-flex\", ...classList])}>\n            {label && <Form.Label className='pr-2'>{label}</Form.Label>}\n            <div className='flex-column flex-grow-1'>\n              <DateTimePickerField\n                name={input.name}\n                onChange={input.onChange}\n                value={input.value}\n                disabled={disabled || false}\n                locale='pt-BR'\n                className={className}\n                minDate={minDate}\n                maxDate={maxDate}\n                id={id}\n              />\n              <p className='text-danger'>{invalid && error}</p>\n            </div>\n          </div>\n        );\n    }\n  }\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport const ColorField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = [\"flex-row\"];\n  let labelClassList = [\"pr-3\", \"mt-2\", \"align-self-start\"];\n  if (field.column) {\n    labelClassList = [\"pr-2\"];\n    classList = [\"flex-column\"];\n  }\n\n  return (\n    <div className={toString([\"d-flex\", ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          type='color'\n          disabled={field.disabled || false}\n          className={toString([\"form-control\", field.className || \"\"])}\n          id={field.input.name}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toString } from \"../utils\";\n\nexport const DataListField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = [\"flex-row\"];\n  let labelClassList = [\"pr-3\", \"mt-2\", \"align-self-start\"];\n  if (field.column) {\n    labelClassList = [\"pr-2\"];\n    classList = [\"flex-column\"];\n  }\n\n  return (\n    <div className={toString([\"d-flex\", ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          disabled={field.disabled || false}\n          className={toString([\"form-control\", field.className || \"\"])}\n          placeholder={field.placeholder}\n          list={field.input.name}\n          size={field.size}\n          id={field.id}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        <datalist id={field.input.name}>\n          {field.options.map((option, index) => (\n            <option key={index} value={option.value}>{option.title}</option>\n          ))}\n        </datalist>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CustomJson, CustomFieldset } from \"./styles\";\n\nexport const Json = props => <CustomJson {...props}>{JSON.stringify(props.values, 0, 2)}</CustomJson>;\n\nexport const Fieldset = ({ children, title, show = true }) => (\n  <CustomFieldset show={show}>\n    <legend style={{ paddingLeft: \"5px\" }}>{title}</legend><br />\n    {children}\n  </CustomFieldset>\n);\n","import React from \"react\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport {\n  InputField, CheckField, TextAreaField, SelectField, RangeField,\n  ImageField, InputGroupField, DateTimePicker, Json, Fieldset,\n  ColorField, DataListField, FileField\n} from \"vwapp-react-form\";\nimport Utilities, { To, By } from \"vwapp-utilities\";\nimport { Container, Col, Form, Button, InputGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\n\nclass App extends React.Component {\n  __onSubmit = data => {\n    console.log(data);\n  }\n\n  __validate = values => {\n    const errors = {};\n\n    if (!values.first_name) {\n      errors.first_name = \"Nome é obrigatório.\";\n    }\n\n    if (!values.cpf) {\n      errors.cpf = \"CPF é obrigatório\";\n    }\n\n    if (values.cpf && !Utilities.validate(By.CPF, values.cpf)) {\n      errors.cpf = \"Formato de CPF inválido.\";\n    }\n\n    if (!values.select) {\n      errors.select = \"Selecione uma opcão.\";\n    }\n\n    if (values.range > 70) {\n      errors.range = \"Passou de 70\";\n    }\n\n    if (values.file && values.file.width > 300) {\n      errors.file = \"Arquivo com tamanho muito grande!\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"text-center\">React Final Form + VWApp React Components</h1>\n        <hr />\n        <FinalForm\n          onSubmit={this.__onSubmit}\n          initialValues={{\n            multiselect: [1, 3], check: true, switch: true, choice: \"teste01\",\n            first_name: \"Victor\", cpf: \"\", color: \"#00f900\", range: \"63\",\n            description: \"teste\", datetime: new Date(), date: new Date(), time: \"20:20\",\n            select: \"2\", browsers: \"Firefox\"\n          }}\n          validate={this.__validate}\n          render={({ handleSubmit, submitting, pristine, values }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} md=\"6\">\n                  <Field\n                    column\n                    name=\"first_name\"\n                    placeholder=\"Primeiro Nome\"\n                    label=\"Primeiro Nome\"\n                    component={InputField}\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} md=\"6\">\n                  <Field\n                    column\n                    name=\"cpf\"\n                    placeholder=\"CPF\"\n                    label=\"CPF:\"\n                    parse={value => Utilities.normalize(To.NUMBER, value)}\n                    format={value => Utilities.normalize(To.CPF, value)}\n                    left={<InputGroup.Text>CPF</InputGroup.Text>}\n                    right={\n                      <DropdownButton\n                        variant=\"outline-secondary\"\n                        title=\"Dropdown\"\n                        id=\"input-group-dropdown-1\">\n                        <Dropdown.Item onClick={() => console.log(\"Action 1\")}>Action 1</Dropdown.Item>\n                        <Dropdown.Item onClick={() => console.log(\"Action 2\")}>Action 2</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item onClick={() => console.log(\"Action 3\")}>Action 3</Dropdown.Item>\n                      </DropdownButton>\n                    }\n                    component={InputGroupField}\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Fieldset title=\"Formulário de escolhas\">\n                <Form.Row className=\"d-flex flex-row\">\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flex-column justify-content-between\">\n                    <Field\n                      name=\"check\"\n                      type=\"checkbox\"\n                      label=\"Teste Checkbox\"\n                      id=\"check\"\n                      component={CheckField}\n                    />\n                    <Field\n                      name=\"switch\"\n                      type=\"switch\"\n                      label=\"Teste Switch\"\n                      id=\"switch\"\n                      component={CheckField}\n                    />\n                    <Field\n                      column\n                      name=\"color\"\n                      label=\"Teste Color\"\n                      component={ColorField}\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flex-column justify-content-between\">\n                    <Field\n                      name=\"choice\"\n                      type=\"radio\"\n                      label=\"Teste Radio 01\"\n                      value=\"teste01\"\n                      id=\"radio1\"\n                      component={CheckField}\n                    />\n                    <Field\n                      name=\"choice\"\n                      type=\"radio\"\n                      label=\"Teste Radio 02\"\n                      value=\"teste02\"\n                      id=\"radio2\"\n                      component={CheckField}\n                    />\n                    <Field\n                      column\n                      name=\"browsers\"\n                      label=\"Data List\"\n                      placeholder=\"Insira um navegador.\"\n                      options={[\n                        {title: \"Internet Explore\", value: \"Internet Explore\"},\n                        {title: \"Firefox\", value: \"Firefox\"},\n                        {title: \"Chrome\", value: \"Chrome\"},\n                        {title: \"Safari\", value: \"Safari\"},\n                      ]}\n                      component={DataListField}\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} md=\"4\">\n                    <Field\n                      column\n                      multiple\n                      name=\"multiselect\"\n                      type=\"select\"\n                      label=\"Selecione as melhores opções\"\n                      options={[\n                        {title: \"1\", value: 1},\n                        {title: \"2\", value: 2},\n                        {title: \"3\", value: 3},\n                        {title: \"4\", value: 4},\n                      ]}\n                      component={SelectField}\n                    />\n                    <hr />\n                    <Field\n                      name=\"select\"\n                      type=\"select\"\n                      placeholder=\"Selecione a melhor opção\"\n                      options={[\n                        {title: \"1\", value: 1},\n                        {title: \"2\", value: 2},\n                        {title: \"3\", value: 3},\n                        {title: \"4\", value: 4},\n                      ]}\n                      component={SelectField}\n                    />\n                  </Form.Group>\n                </Form.Row>\n              </Fieldset>\n\n              <Fieldset title=\"Formulário de datas\">\n                <Form.Row className=\"d-flex flew-row justify-content-center\">\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flew-row justify-content-center\">\n                    <Field\n                      name=\"datetime\"\n                      label=\"Date e Hora:\"\n                      type=\"datetime\"\n                      minDate={new Date()}\n                      component={DateTimePicker}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flew-row justify-content-center\">\n                    <Field\n                      name=\"date\"\n                      label=\"Data:\"\n                      type=\"date\"\n                      minDate={new Date()}\n                      component={DateTimePicker}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flew-row justify-content-center\">\n                    <Field\n                      name=\"time\"\n                      label=\"Hora:\"\n                      type=\"time\"\n                      component={DateTimePicker}\n                    />\n                  </Form.Group>\n                </Form.Row>\n              </Fieldset>\n\n              <Form.Row>\n                <Form.Group as={Col} md=\"12\">\n                  <Field\n                    name=\"description\"\n                    placeholder=\"Descrição\"\n                    rows={5}\n                    component={TextAreaField}\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"d-flex flex-row\">\n                <Form.Group as={Col} md=\"8\" className=\"d-flex flex-column justify-content-between\">\n                  <Field\n                    column\n                    name=\"range\"\n                    label=\"Range\"\n                    max={80}\n                    component={RangeField}\n                  />\n                  <Field\n                    name=\"file\"\n                    label=\"Arquivo:\"\n                    type='file'\n                    placeholder=\"Clique para inserir o arquivo.\"\n                    component={FileField}\n                  />\n                  <Json values={values} />\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\">\n                  <Field\n                    name=\"image\"\n                    type='file'\n                    label=\"Imagem\"\n                    placeholder=\"Clique aqui para inserir a imagem.\"\n                    component={ImageField}\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Button variant=\"dark\" type=\"submit\" disabled={submitting || pristine}>Enviar</Button>\n            </Form>\n          )}\n        />\n        <br />\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}