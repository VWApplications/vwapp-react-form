{"version":3,"sources":["../../dist/user~bWEoNccF.png","../../src/utils.js","../../src/fields/InputField.js","../../src/fields/CheckField.js","../../src/fields/TextAreaField.js","../../src/fields/SelectField.js","../../src/fields/RangeField.js","../../src/styles.js","../../src/assets/user.png","../../src/fields/ImageField.js","../../src/fields/FileField.js","../../src/fields/InputGroup.js","../../src/fields/DateTimeField.js","../../src/fields/ColorField.js","../../src/fields/DataListField.js","../../src/components.js","../../src/index.js","../../src/normalizers/date.js","../../src/normalizers/document.js","../../src/normalizers/money.js","../../src/normalizers/phone.js","../../src/normalizers/zipCode.js","../../src/validations/document.js","../../src/validations/email.js","../../src/validations/phone.js","../../src/validations/photo.js","../../src/validations/type.js","App.js","index.js"],"names":["module","exports","onlyNumbers","value","toString","list","join","string","index","InputField","field","error","touched","classList","labelClassList","className","Form","custom","as","type","placeholder","disabled","size","plaintext","readOnly","id","isInvalid","isValid","CheckField","checked","inline","label","feedback","TextAreaField","rows","SelectField","key","option","RangeField","min","max","ImgContainer","styled","CustomJson","CustomFieldset","props","ImageLabel","require","ImageField","componentDidMount","input","this","__handleChange","event","imageFile","localImageUrl","URL","imageObject","window","__handlePreview","document","previewImageDom","render","mimeType","previewLogoUrl","invalid","thumbnail","fluid","src","alt","name","accept","onChange","defaultProps","FileField","file","column","InputGroupField","InputGroup","DateTimePicker","maxDate","minDate","locale","ColorField","DataListField","Json","JSON","Fieldset","children","title","show","style","paddingLeft","Utilities","numbers","normalizeDate","normalizeTime","normalizeDatetime","normalizeCPF","normalizeCNPJ","normalizeValue","normalizePhone","normalizeZipCode","digits","isValidCpf","validateCpf","isValidCnpj","validateCnpj","test","phone","validatePhone","img","validateImageFormat","maxHeight","validateImageHeight","maxWidth","validateImageWidth","maxWeight","validateImageWeight","validatePhoto","data","Number","isNumber","App","__onSubmit","console","log","__validate","values","errors","first_name","cpf","validate","select","range","width","Container","onSubmit","initialValues","multiselect","check","switch","choice","color","description","datetime","Date","date","time","browsers","handleSubmit","submitting","pristine","noValidate","Row","Group","Col","md","component","parse","normalize","format","left","Text","right","DropdownButton","variant","Dropdown","Item","onClick","Divider","options","multiple","Button","React","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4084a818.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user~bWEoNccF.6102afa3.png\";","/* eslint-disable no-prototype-builtins */\nexport function isEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function onlyNumbers(value) {\n  return value.replace(/[^\\d]/g, '');\n};\n\nexport function formatWithLeftZero(number) {\n  return number < 10 ? `0${number}` : number;\n}\n\nexport function moveToTop() {\n  document.body.scrollTop = 0;\n  document.documentElement.scrollTop = 0;\n}\n\nexport const toString = (list = [], join = ' ') => {\n  let string = '';\n  list.map((item, index) => {\n    if (index === 0) {\n      string += `${item}`;\n    } else {\n      if (item) {\n        string += `${join}${item}`;\n      } else {\n        string += `${item}`;\n      }\n    }\n  });\n\n  return string;\n};\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport const InputField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = ['flex-row'];\n  let labelClassList = ['pr-3', 'mt-2', 'align-self-start'];\n  if (field.column) {\n    labelClassList = ['pr-2'];\n    classList = ['flex-column'];\n  }\n\n  return (\n    <div className={toString(['d-flex', ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          type={field.input.type ? field.input.type : 'text'}\n          placeholder={field.placeholder}\n          disabled={(field.disabled || field.readOnly) || false}\n          className={toString(['form-control', field.className || ''])}\n          size={field.size}\n          plaintext={field.readOnly || false}\n          readOnly={field.readOnly || false}\n          id={field.input.name}\n          isInvalid={touched && error && !field.readOnly && !field.disabled}\n          isValid={touched && !error && !field.readOnly && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  )\n}\n","import React, { Fragment } from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport const CheckField = field => {\n  const { error } = field.meta;\n\n  return (\n    <Fragment>\n      <Form.Check\n        custom\n        {...field.input}\n        checked={field.input.type === 'switch' ? field.input.value : field.input.checked}\n        disabled={field.disabled || false}\n        id={field.id}\n        inline={field.inline || false}\n        label={field.label}\n        feedback={error}\n        isInvalid={error}\n      />\n    </Fragment>\n  )\n}\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport const TextAreaField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = ['flex-row'];\n  let labelClassList = ['pr-3', 'align-self-center'];\n  if (field.column) {\n    labelClassList = ['pr-2'];\n    classList = ['flex-column'];\n  }\n\n  return (\n    <div className={toString(['d-flex', ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          as='textarea'\n          type='text'\n          placeholder={field.placeholder}\n          disabled={(field.disabled || field.readOnly) || false}\n          className={field.className}\n          size={field.size}\n          rows={field.rows}\n          plaintext={field.readOnly || false}\n          readOnly={field.readOnly || false}\n          id={field.input.name}\n          isInvalid={touched && error && !field.readOnly && !field.disabled}\n          isValid={touched && !error && !field.readOnly && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport const SelectField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = ['flex-row'];\n  let labelClassList = ['pr-3', 'align-self-center'];\n  if (field.column) {\n    labelClassList = ['pr-2'];\n    classList = ['flex-column'];\n  }\n\n  return (\n    <div className={toString(['d-flex', ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='select'\n          disabled={field.disabled || false}\n          className={field.className}\n          size={field.size}\n          id={field.input.name}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}>\n          {!field.input.multiple && <option value=''>{field.placeholder ? field.placeholder : 'Selecione uma opção'}</option>}\n          {field.options.map((option, index) => (\n            <option key={index} value={option.value}>{option.title}</option>\n          ))}\n        </Form.Control>\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport const RangeField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = ['flex-row'];\n  if (field.column) classList = ['flex-column'];\n\n  return (\n    <div className={toString(['d-flex', ...classList])}>\n      {field.label && <Form.Label className='pr-2'>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          type='range'\n          min={field.min || 0}\n          max={field.max || 100}\n          disabled={field.disabled || false}\n          className={field.className}\n          id={field.input.name}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  )\n}\n","import styled from 'styled-components';\nimport { Form } from 'react-bootstrap';\n\nexport const ImgContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nexport const CustomJson = styled.pre`\n  border: 1px solid #ccc;\n  background: rgba(0, 0, 0, 0.1);\n  box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n  padding: 20px;\n  margin: 0 10px 0;\n`;\n\nexport const CustomFieldset = styled.fieldset`\n    padding: 0 20px;\n    margin: 10px 0 30px 0;\n    border: 1px solid #ccc;\n    > legend {\n        margin-bottom: 0;\n    }\n    display: ${props => props.show ? 'block' : 'none'};\n`;\n\nexport const ImageLabel = styled(Form.Label)`\n  width: 100%;\n  text-align: center;\n`;\n","/* loaded by smart-asset */\nexport default require(\"./user~bWEoNccF.png\")","import React, { Fragment, Component } from 'react';\nimport { Form, Image } from 'react-bootstrap';\nimport { ImgContainer, ImageLabel } from '../styles';\nimport user from '../assets/user.png';\n\nexport class ImageField extends Component {\n  componentDidMount() {\n    const { input } = this.props;\n\n    if (typeof input.value === 'string' && input.value) {\n      this.__handlePreview(input.value);\n    }\n  }\n\n  static defaultProps = {\n    previewLogoUrl: user,\n    mimeType: 'image/jpeg, image/png'\n  };\n\n  __handleChange(event, input) {\n    event.preventDefault();\n    const imageFile = event.target.files[0];\n    if (imageFile) {\n      const localImageUrl = URL.createObjectURL(imageFile);\n      const imageObject = new window.Image();\n      imageObject.onload = () => {\n        imageFile.width = imageObject.naturalWidth;\n        imageFile.height = imageObject.naturalHeight;\n        input.onChange(imageFile);\n        URL.revokeObjectURL(imageFile);\n      };\n      imageObject.src = localImageUrl;\n      this.__handlePreview(localImageUrl);\n    }\n  }\n\n  __handlePreview(imgURL) {\n    const previewImageDom = document.querySelector('.preview-image');\n    previewImageDom.src = imgURL;\n  }\n\n  render() {\n    const { input, className, mimeType, previewLogoUrl, placeholder, disabled, label } = this.props;\n    const { error, invalid } = this.props.meta;\n\n    return (\n      <Fragment>\n        {label && <ImageLabel>{label}</ImageLabel>}\n        <ImgContainer>\n          <Image thumbnail fluid src={previewLogoUrl} className='preview-image' alt='Visualização' />\n        </ImgContainer>\n\n        <Fragment>\n          <Form.File\n            custom\n            name={input.name}\n            type={input.type}\n            label={input.value ? input.value.name : placeholder}\n            accept={mimeType}\n            disabled={disabled || false}\n            className={className}\n            onChange={event => this.__handleChange(event, input)}\n            feedback={error}\n            isInvalid={invalid && error && !disabled}\n            isValid={invalid && !error && !disabled}\n          />\n          <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        </Fragment>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport class FileField extends Component {\n  __handleChange(event, input) {\n    event.preventDefault();\n    const file = event.target.files[0];\n    input.onChange(file);\n  }\n\n  render() {\n    const { input, className, placeholder, disabled, label, column } = this.props;\n    const { error, invalid } = this.props.meta;\n\n    let classList = ['flex-row'];\n    let labelClassList = ['pr-3', 'mt-2', 'align-self-start'];\n    if (column) {\n      labelClassList = ['pr-2'];\n      classList = ['flex-column'];\n    }\n\n    return (\n      <div className={toString(['d-flex', ...classList])}>\n        {label && <Form.Label className={toString([...labelClassList])}>{label}</Form.Label>}\n        <div className='flex-column flex-grow-1'>\n          <Form.File\n            custom\n            name={input.name}\n            type={input.type}\n            label={input.value ? input.value.name : placeholder}\n            disabled={disabled || false}\n            className={className}\n            onChange={event => this.__handleChange(event, input)}\n            feedback={error}\n            isInvalid={invalid && error && !disabled}\n            isValid={invalid && !error && !disabled}\n          />\n          <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Fragment } from 'react';\nimport { InputGroup, Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport const InputGroupField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = ['flex-row'];\n  let labelClassList = ['pr-3', 'mt-2', 'align-self-start'];\n  if (field.column) {\n    labelClassList = ['pr-2'];\n    classList = ['flex-column'];\n  }\n\n  return (\n    <div className={toString(['d-flex', ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <InputGroup>\n          <InputGroup.Prepend>\n            {field.left}\n          </InputGroup.Prepend>\n          <Fragment>\n            <Form.Control\n              {...field.input}\n              custom\n              as='input'\n              type='text'\n              placeholder={field.placeholder}\n              disabled={field.disabled || false}\n              className={toString(['form-control', field.className || ''])}\n              id={field.input.name}\n              isInvalid={touched && error && !field.disabled}\n              isValid={touched && !error && !field.disabled}\n            />\n          </Fragment>\n          <InputGroup.Append>\n            {field.right}\n          </InputGroup.Append>\n          <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        </InputGroup>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport DateTimePickerField from 'react-datetime-picker';\nimport DatePicker from 'react-date-picker';\nimport TimePicker from 'react-time-picker';\nimport { toString } from '../utils';\n\nexport class DateTimePicker extends Component {\n  render() {\n    const { label, input, className, id, maxDate, minDate, disabled, column } = this.props;\n    const { error, invalid } = this.props.meta;\n\n    let classList = ['flex-row'];\n    if (column) classList = ['flex-column'];\n\n    switch (input.type) {\n      case 'time':\n        return (\n          <div className={toString(['d-flex', ...classList])}>\n            {label && <Form.Label className='pr-2'>{label}</Form.Label>}\n            <div className='flex-column flex-grow-1'>\n              <TimePicker\n                name={input.name}\n                onChange={input.onChange}\n                value={input.value}\n                disabled={disabled || false}\n                locale='pt-BR'\n                className={className}\n                id={id}\n              />\n              <p className='text-danger'>{invalid && error}</p>\n            </div>\n          </div>\n        );\n      case 'date':\n        return (\n          <div className={toString(['d-flex', ...classList])}>\n            {label && <Form.Label className='pr-2'>{label}</Form.Label>}\n            <div className='flex-column flex-grow-1'>\n              <DatePicker\n                name={input.name}\n                onChange={input.onChange}\n                value={input.value}\n                disabled={disabled || false}\n                locale='pt-BR'\n                className={className}\n                minDate={minDate}\n                maxDate={maxDate}\n                id={id}\n              />\n              <p className='text-danger'>{invalid && error}</p>\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <div className={toString(['d-flex', ...classList])}>\n            {label && <Form.Label className='pr-2'>{label}</Form.Label>}\n            <div className='flex-column flex-grow-1'>\n              <DateTimePickerField\n                name={input.name}\n                onChange={input.onChange}\n                value={input.value}\n                disabled={disabled || false}\n                locale='pt-BR'\n                className={className}\n                minDate={minDate}\n                maxDate={maxDate}\n                id={id}\n              />\n              <p className='text-danger'>{invalid && error}</p>\n            </div>\n          </div>\n        )\n    }\n  }\n}\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport const ColorField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = ['flex-row'];\n  let labelClassList = ['pr-3', 'mt-2', 'align-self-start'];\n  if (field.column) {\n    labelClassList = ['pr-2'];\n    classList = ['flex-column'];\n  }\n\n  return (\n    <div className={toString(['d-flex', ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          type='color'\n          disabled={field.disabled || false}\n          className={toString(['form-control', field.className || ''])}\n          id={field.input.name}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { toString } from '../utils';\n\nexport const DataListField = field => {\n  const { error, touched } = field.meta;\n\n  let classList = ['flex-row'];\n  let labelClassList = ['pr-3', 'mt-2', 'align-self-start'];\n  if (field.column) {\n    labelClassList = ['pr-2'];\n    classList = ['flex-column'];\n  }\n\n  return (\n    <div className={toString(['d-flex', ...classList])}>\n      {field.label && <Form.Label className={toString([...labelClassList])}>{field.label}</Form.Label>}\n      <div className='flex-column flex-grow-1'>\n        <Form.Control\n          {...field.input}\n          custom\n          as='input'\n          disabled={field.disabled || false}\n          className={toString(['form-control', field.className || ''])}\n          placeholder={field.placeholder}\n          list={field.input.name}\n          size={field.size}\n          id={field.id}\n          isInvalid={touched && error && !field.disabled}\n          isValid={touched && !error && !field.disabled}\n        />\n        <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n        <datalist id={field.input.name}>\n          {field.options.map((option, index) => (\n            <option key={index} value={option.value}>{option.title}</option>\n          ))}\n        </datalist>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { CustomJson, CustomFieldset } from './styles';\n\nexport const Json = props => <CustomJson {...props}>{JSON.stringify(props.values, 0, 2)}</CustomJson>;\n\nexport const Fieldset = ({ children, title, show = true }) => (\n  <CustomFieldset show={show}>\n    <legend style={{ paddingLeft: '5px' }}>{title}</legend><br />\n    {children}\n  </CustomFieldset>\n)\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { onlyNumbers } from './utils';\nimport { validateCpf, validateCnpj, validateEmail, validatePhone, validatePhoto, isNumber } from './validations';\nimport {\n  normalizeDate, normalizeTime, normalizeDatetime, normalizeCPF, normalizeCNPJ,\n  normalizeValue, normalizePhone, normalizeZipCode\n} from './normalizers';\n\nexport { InputField } from './fields/InputField';\nexport { CheckField } from './fields/CheckField';\nexport { TextAreaField } from './fields/TextAreaField';\nexport { SelectField } from './fields/SelectField';\nexport { RangeField } from './fields/RangeField';\nexport { ImageField } from './fields/ImageField';\nexport { FileField } from './fields/FileField';\nexport { InputGroupField } from './fields/InputGroup';\nexport { DateTimePicker } from './fields/DateTimeField';\nexport { ColorField } from './fields/ColorField';\nexport { DataListField } from './fields/DataListField';\nexport { Json, Fieldset } from './components';\n\nexport class Utilities {\n  static normalize(type, data) {\n    switch (type) {\n      case 'date':\n        return normalizeDate(data);\n      case 'time':\n        return normalizeTime(data);\n      case 'datetime':\n        return normalizeDatetime(data);\n      case 'cpf':\n        return normalizeCPF(data);\n      case 'cnpj':\n        return normalizeCNPJ(data);\n      case 'value':\n        return normalizeValue(data);\n      case 'phone':\n        return normalizePhone(data);\n      case 'zipCode':\n        return normalizeZipCode(data);\n      case 'number':\n        return onlyNumbers(data);\n      default:\n        return null;\n    }\n  }\n\n  static validate(type, data) {\n    switch (type) {\n      case 'cpf':\n        return validateCpf(data);\n      case 'cnpj':\n        return validateCnpj(data);\n      case 'email':\n        return validateEmail(data);\n      case 'phone':\n        return validatePhone(data);\n      case 'photo':\n        return validatePhoto(data);\n      case 'number':\n        return isNumber(data);\n      default:\n        return null;\n    }\n  }\n}\n","import { onlyNumbers } from '../utils';\n\nexport const normalizeDate = value => {\n  if (!value) {\n    return value;\n  }\n\n  const numbers = onlyNumbers(value);\n\n  if (numbers.length <= 2) {\n    return numbers;\n  }\n\n  if (numbers.length <= 4) {\n    return `${numbers.slice(0, 2)}/${numbers.slice(2, 4)}`;\n  }\n\n  if (numbers.length <= 8 || numbers.length > 8) {\n    return `${numbers.slice(0, 2)}/${numbers.slice(2, 4)}/${numbers.slice(4, 8)}`;\n  }\n};\n\nexport const normalizeTime = value => {\n  if (!value) {\n    return value;\n  }\n\n  const numbers = onlyNumbers(value);\n\n  if (numbers.length <= 2) {\n    return numbers;\n  }\n\n  if (numbers.length <= 4 || numbers.length > 4) {\n    return `${numbers.slice(0, 2)}:${numbers.slice(2, 4)}`;\n  }\n};\n\nexport const normalizeDatetime = value => {\n  if (!value) {\n    return value;\n  }\n\n  const numbers = onlyNumbers(value);\n\n  if (numbers.length <= 2) {\n    return numbers;\n  }\n\n  if (numbers.length <= 4) {\n    return `${numbers.slice(0, 2)}/${numbers.slice(2, 4)}`;\n  }\n\n  if (numbers.length <= 8) {\n    return `${numbers.slice(0, 2)}/${numbers.slice(2, 4)}/${numbers.slice(4, 8)}`;\n  }\n\n  if (numbers.length <= 10) {\n    return `${numbers.slice(0, 2)}/${numbers.slice(2, 4)}/${numbers.slice(4, 8)} ${numbers.slice(8, 10)}`;\n  }\n\n  if (numbers.length <= 12 || numbers.length > 12) {\n    return `${numbers.slice(0, 2)}/${numbers.slice(2, 4)}/${numbers.slice(4, 8)} ${numbers.slice(8, 10)}:${numbers.slice(10, 12)}`;\n  }\n};\n","import { onlyNumbers } from '../utils';\n\nexport const normalizeCPF = value => {\n  if (!value) {\n    return value;\n  }\n\n  const numbers = onlyNumbers(value);\n\n  if (numbers.length <= 3) {\n    return numbers;\n  }\n\n  if (numbers.length <= 6) {\n    return `${numbers.slice(0, 3)}.${numbers.slice(3, 6)}`;\n  }\n\n  if (numbers.length <= 9) {\n    return `${numbers.slice(0, 3)}.${numbers.slice(3, 6)}.${numbers.slice(6, 9)}`;\n  }\n\n  if (numbers.length <= 11 || numbers.length > 11) {\n    return `${numbers.slice(0, 3)}.${numbers.slice(3, 6)}.${numbers.slice(6, 9)}-${numbers.slice(9, 11)}`;\n  }\n};\n\nexport const normalizeCNPJ = value => {\n  if (!value) {\n    return value;\n  }\n\n  const numbers = onlyNumbers(value);\n\n  if (numbers.length <= 2) {\n    return numbers;\n  }\n\n  if (numbers.length <= 5) {\n    return `${numbers.slice(0, 2)}.${numbers.slice(2, 5)}`;\n  }\n\n  if (numbers.length <= 8) {\n    return `${numbers.slice(0, 2)}.${numbers.slice(2, 5)}.${numbers.slice(5, 8)}`;\n  }\n\n  if (numbers.length <= 12) {\n    return `${numbers.slice(0, 2)}.${numbers.slice(2, 5)}.${numbers.slice(5, 8)}/${numbers.slice(8, 12)}`;\n  }\n\n  if (numbers.length <= 14 || numbers.length > 14) {\n    return `${numbers.slice(0, 2)}.${numbers.slice(2, 5)}.${numbers.slice(5, 8)}/${numbers.slice(8, 12)}-${numbers.slice(12, 14)}`;\n  }\n};\n","import { onlyNumbers } from '../utils';\n\nexport const normalizeValue = value => {\n  const numbers = onlyNumbers(value);\n\n  if (!numbers) {\n    return numbers;\n  }\n\n  if (numbers.length <= 1) {\n    return 'R$ ' + numbers;\n  }\n\n  if (numbers.length <= 2) {\n    return `R$ ${numbers.slice(0, 1)},${numbers.slice(1, 2)}`;\n  }\n\n  if (numbers.length <= 3) {\n    return `R$ ${numbers.slice(0, 1)},${numbers.slice(1, 3)}`;\n  }\n\n  if (numbers.length > 3) {\n    return `R$ ${numbers.slice(0, numbers.length - 2)},${numbers.slice(numbers.length - 2, numbers.length)}`;\n  }\n};\n","import { onlyNumbers } from '../utils';\n\nexport const normalizePhone = value => {\n  if (!value) {\n    return value;\n  }\n\n  const numbers = onlyNumbers(value);\n\n  if (numbers.length <= 2) {\n    return numbers;\n  }\n\n  if (numbers.length <= 7) {\n    return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 7)}`;\n  }\n\n  if (numbers.length <= 11 || numbers.length > 11) {\n    return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 7)}-${numbers.slice(7, 11)}`;\n  }\n};\n","import { onlyNumbers } from '../utils';\n\nexport const normalizeZipCode = value => {\n  if (!value) {\n    return value;\n  }\n\n  const numbers = onlyNumbers(value);\n\n  if (numbers.length <= 5) {\n    return numbers;\n  }\n\n  if (numbers <= 8 || numbers > 9) {\n    return `${numbers.slice(0, 5)}-${numbers.slice(5, 8)}`;\n  }\n};\n","import { validate as isValidCnpj } from 'node-cnpj';\nimport { validate as isValidCpf } from 'node-cpf';\n\nexport const validateCpf = value => {\n  if (!value) {\n    return false;\n  }\n\n  const digits = value.replace(/[^\\d]/g, '');\n\n  if (digits.length !== 11) {\n    return false;\n  } else if (!isValidCpf(digits)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const validateCnpj = value => {\n  if (!value) {\n    return false;\n  }\n\n  const digits = value.replace(/[^\\d]/g, '');\n\n  if (digits.length < 14 || digits.length > 15) {\n    return false;\n  } else if (!isValidCnpj(digits)) {\n    return false;\n  }\n\n  return true;\n};\n","const validateEmail = email => {\n  if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n    return true;\n  }\n\n  return false;\n};\n\nexport { validateEmail };\n","export const validatePhone = phone => {\n  if (!phone) {\n    return false;\n  }\n\n  const digits = phone.replace(/[^\\d]/g, '');\n  if (digits.length === 11 || digits.length === 12) {\n    return true;\n  }\n\n  return false;\n};\n","const validateImageWeight = (img, maxWeight) => {\n  if (img && img.size) {\n    const imageFileKb = img.size / 1024;\n    if (imageFileKb > maxWeight) {\n      return `Tamanho da imagem deve ser menor ou igual a ${maxWeight}kb`\n    }\n  }\n}\n\nconst validateImageFormat = (img, mimeType) => {\n  if (img) {\n    if (!mimeType.includes(img.type)) {\n      return `Formato da imagem deve ser ${mimeType}`;\n    }\n  }\n}\n\nconst validateImageWidth = (img, maxWidth) => {\n  if (img) {\n    if (img.width > maxWidth) {\n      return `Largura da imagem deve ser menor ou igual a ${maxWidth}px`;\n    }\n  }\n}\n\nconst validateImageHeight = (img, maxHeight) => {\n  if (img) {\n    if (img.height > maxHeight) {\n      return `Altura da imagem deve ser menor ou igual a ${maxHeight}px`;\n    }\n  }\n}\n\nexport const validatePhoto = img => {\n  let error = validateImageFormat(img, 'image/jpeg, image/png');\n\n  if (!error) {\n    error = validateImageHeight(img, 300);\n  }\n\n  if (!error) {\n    error = validateImageWidth(img, 300);\n  }\n\n  if (!error) {\n    error = validateImageWeight(img, 500);\n  }\n\n  return error;\n}\n","/* eslint-disable no-prototype-builtins */\nexport const isNumber = data => {\n  if (Number(data) !== data && data !== undefined) {\n    return false;\n  }\n\n  return true;\n};\n","import React from 'react';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport {\n  InputField, CheckField, TextAreaField, SelectField, RangeField,\n  ImageField, InputGroupField, DateTimePicker, Json, Fieldset,\n  ColorField, DataListField, FileField, Utilities\n} from 'vwapp-react-form';\nimport { Container, Col, Form, Button, InputGroup, DropdownButton, Dropdown } from 'react-bootstrap';\n\nclass App extends React.Component {\n  __onSubmit = data => {\n    console.log(data);\n  }\n\n  __validate = values => {\n    const errors = {};\n\n    if (!values.first_name) {\n      errors.first_name = \"Nome é obrigatório.\";\n    }\n\n    if (!values.cpf) {\n      errors.cpf = \"CPF é obrigatório\";\n    }\n\n    if (values.cpf && !Utilities.validate(\"cpf\", values.cpf)) {\n      errors.cpf = \"Formato de CPF inválido.\";\n    }\n\n    if (!values.select) {\n      errors.select = \"Selecione uma opcão.\";\n    }\n\n    if (values.range > 70) {\n      errors.range = \"Passou de 70\";\n    }\n\n    if (values.file && values.file.width > 300) {\n      errors.file = \"Arquivo com tamanho muito grande!\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"text-center\">React Final Form + VWApp React Components</h1>\n        <hr />\n        <FinalForm\n          onSubmit={this.__onSubmit}\n          initialValues={{\n            multiselect: [1, 3], check: true, switch: true, choice: \"teste01\",\n            first_name: \"Victor\", cpf: \"\", color: \"#00f900\", range: \"63\",\n            description: \"teste\", datetime: new Date(), date: new Date(), time: \"20:20\",\n            select: \"2\", browsers: \"Firefox\"\n          }}\n          validate={this.__validate}\n          render={({ handleSubmit, submitting, pristine, values }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} md=\"6\">\n                  <Field\n                    column\n                    name=\"first_name\"\n                    placeholder=\"Primeiro Nome\"\n                    label=\"Primeiro Nome\"\n                    component={InputField}\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} md=\"6\">\n                  <Field\n                    column\n                    name=\"cpf\"\n                    placeholder=\"CPF\"\n                    label=\"CPF:\"\n                    parse={value => Utilities.normalize(\"number\", value)}\n                    format={value => Utilities.normalize(\"cpf\", value)}\n                    left={<InputGroup.Text>CPF</InputGroup.Text>}\n                    right={\n                      <DropdownButton\n                        variant=\"outline-secondary\"\n                        title=\"Dropdown\"\n                        id=\"input-group-dropdown-1\">\n                        <Dropdown.Item onClick={() => console.log(\"Action 1\")}>Action 1</Dropdown.Item>\n                        <Dropdown.Item onClick={() => console.log(\"Action 2\")}>Action 2</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item onClick={() => console.log(\"Action 3\")}>Action 3</Dropdown.Item>\n                      </DropdownButton>\n                    }\n                    component={InputGroupField}\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Fieldset title=\"Formulário de escolhas\">\n                <Form.Row className=\"d-flex flex-row\">\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flex-column justify-content-between\">\n                    <Field\n                      name=\"check\"\n                      type=\"checkbox\"\n                      label=\"Teste Checkbox\"\n                      id=\"check\"\n                      component={CheckField}\n                    />\n                    <Field\n                      name=\"switch\"\n                      type=\"switch\"\n                      label=\"Teste Switch\"\n                      id=\"switch\"\n                      component={CheckField}\n                    />\n                    <Field\n                      column\n                      name=\"color\"\n                      label=\"Teste Color\"\n                      component={ColorField}\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flex-column justify-content-between\">\n                    <Field\n                      name=\"choice\"\n                      type=\"radio\"\n                      label=\"Teste Radio 01\"\n                      value=\"teste01\"\n                      id=\"radio1\"\n                      component={CheckField}\n                    />\n                    <Field\n                      name=\"choice\"\n                      type=\"radio\"\n                      label=\"Teste Radio 02\"\n                      value=\"teste02\"\n                      id=\"radio2\"\n                      component={CheckField}\n                    />\n                    <Field\n                      column\n                      name=\"browsers\"\n                      label=\"Data List\"\n                      placeholder=\"Insira um navegador.\"\n                      options={[\n                        {title: \"Internet Explore\", value: \"Internet Explore\"},\n                        {title: \"Firefox\", value: \"Firefox\"},\n                        {title: \"Chrome\", value: \"Chrome\"},\n                        {title: \"Safari\", value: \"Safari\"},\n                      ]}\n                      component={DataListField}\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} md=\"4\">\n                    <Field\n                      column\n                      multiple\n                      name=\"multiselect\"\n                      type=\"select\"\n                      label=\"Selecione as melhores opções\"\n                      options={[\n                        {title: \"1\", value: 1},\n                        {title: \"2\", value: 2},\n                        {title: \"3\", value: 3},\n                        {title: \"4\", value: 4},\n                      ]}\n                      component={SelectField}\n                    />\n                    <hr />\n                    <Field\n                      name=\"select\"\n                      type=\"select\"\n                      placeholder=\"Selecione a melhor opção\"\n                      options={[\n                        {title: \"1\", value: 1},\n                        {title: \"2\", value: 2},\n                        {title: \"3\", value: 3},\n                        {title: \"4\", value: 4},\n                      ]}\n                      component={SelectField}\n                    />\n                  </Form.Group>\n                </Form.Row>\n              </Fieldset>\n\n              <Fieldset title=\"Formulário de datas\">\n                <Form.Row className=\"d-flex flew-row justify-content-center\">\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flew-row justify-content-center\">\n                    <Field\n                      name=\"datetime\"\n                      label=\"Date e Hora:\"\n                      type=\"datetime\"\n                      minDate={new Date()}\n                      component={DateTimePicker}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flew-row justify-content-center\">\n                    <Field\n                      name=\"date\"\n                      label=\"Data:\"\n                      type=\"date\"\n                      minDate={new Date()}\n                      component={DateTimePicker}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"4\" className=\"d-flex flew-row justify-content-center\">\n                    <Field\n                      name=\"time\"\n                      label=\"Hora:\"\n                      type=\"time\"\n                      component={DateTimePicker}\n                    />\n                  </Form.Group>\n                </Form.Row>\n              </Fieldset>\n\n              <Form.Row>\n                <Form.Group as={Col} md=\"12\">\n                  <Field\n                    name=\"description\"\n                    placeholder=\"Descrição\"\n                    rows={5}\n                    component={TextAreaField}\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row className=\"d-flex flex-row\">\n                <Form.Group as={Col} md=\"8\" className=\"d-flex flex-column justify-content-between\">\n                  <Field\n                    column\n                    name=\"range\"\n                    label=\"Range\"\n                    max={80}\n                    component={RangeField}\n                  />\n                  <Field\n                    name=\"file\"\n                    label=\"Arquivo:\"\n                    type='file'\n                    placeholder=\"Clique para inserir o arquivo.\"\n                    component={FileField}\n                  />\n                  <Json values={values} />\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\">\n                  <Field\n                    name=\"image\"\n                    type='file'\n                    label=\"Imagem\"\n                    placeholder=\"Clique aqui para inserir a imagem.\"\n                    component={ImageField}\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Button variant=\"dark\" type=\"submit\" disabled={submitting || pristine}>Enviar</Button>\n            </Form>\n          )}\n        />\n        <br />\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}